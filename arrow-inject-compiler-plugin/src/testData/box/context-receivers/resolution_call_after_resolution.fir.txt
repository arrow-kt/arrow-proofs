FILE: resolution_call_after_resolution.kt
    package foo.bar

    @R|arrow/inject/annotations/Contextual|() public final class A : R|kotlin/Any| {
        public constructor(): R|foo/bar/A| {
            super<R|kotlin/Any|>()
        }

    }
    context(R|foo/bar/A|)
    @R|arrow/inject/annotations/Contextual|() public final class B : R|kotlin/Any| {
        public constructor(): R|foo/bar/B| {
            super<R|kotlin/Any|>()
        }

    }
    context(R|foo/bar/B|)
    public final class C : R|kotlin/Any| {
        public constructor(x: R|kotlin/Int|): R|foo/bar/C| {
            super<R|kotlin/Any|>()
        }

        public final val x: R|kotlin/Int| = R|<local>/x|
            public get(): R|kotlin/Int|

    }
    context(R|foo/bar/B|)
    @R|arrow/inject/annotations/ContextResolution|() public final fun f2(): R|kotlin/Int| {
        ^f2 R|foo/bar/C.C|(Int(0)).R|foo/bar/C.x|
    }
    public final fun box(): R|kotlin/String| {
        lval result: R|kotlin/Int| = R|foo/bar/f2|()
        ^box when () {
            ==(R|<local>/result|, Int(0)) ->  {
                String(OK)
            }
            else ->  {
                <strcat>(String(Fail: ), R|<local>/result|)
            }
        }

    }
FILE: __GENERATED DECLARATIONS__.kt
    package foo.bar

    @R|arrow/inject/annotations/ContextResolved|() public final fun f2(): R|kotlin/Int|
