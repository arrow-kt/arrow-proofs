FILE: simple.kt
    package foo.bar

    @R|foo/bar/annotations/Given|() public final object X : R|kotlin/Any| {
        private constructor(): R|foo/bar/X| {
            super<R|kotlin/Any|>()
        }

        public final val value: R|kotlin/String| = String(yes!)
            public get(): R|kotlin/String|

    }
    @R|foo/bar/annotations/Config|() public final object Y : R|kotlin/Any| {
        private constructor(): R|foo/bar/Y| {
            super<R|kotlin/Any|>()
        }

        public final val value: R|kotlin/String| = String(nope!)
            public get(): R|kotlin/String|

    }
    @R|arrow/inject/annotations/Inject|() public final fun foo(id: R|kotlin/Int|, @R|foo/bar/annotations/Given|() x: R|foo/bar/X|, @R|foo/bar/annotations/Config|() y: R|foo/bar/Y|): R|kotlin/String| {
        ^foo <strcat>(R|<local>/id|, String(: ), R|<local>/x|.R|foo/bar/X.value|, String( to ), R|<local>/y|.R|foo/bar/Y.value|)
    }
    public final val result: R|kotlin/String| = R|SubstitutionOverride<foo/bar/foo: R|kotlin/String|>|(Int(1))
        public get(): R|kotlin/String|
FILE: __GENERATED DECLARATIONS__.kt
    package foo.bar

    @R|arrow/inject/annotations/CompileTime|() public final fun foo(id: R|kotlin/Int|, @R|foo/bar/annotations/Given|() x: R|foo/bar/X| = R|arrow/inject/annotations/resolve|(), @R|foo/bar/annotations/Config|() y: R|foo/bar/Y| = R|arrow/inject/annotations/resolve|(), _unit0_: R|kotlin/Unit| = R|kotlin/Unit|()): R|kotlin/String|
